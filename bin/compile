#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir>

# fail fast
set -e

if [ $STACK != "cedar-14" ]; then
	echo "Stack ${STACK} not supported" && exit 1
fi

BUILD_DIR=$1
CACHE_DIR=$2
ENV_DIR=$3
# This is where the buildpack is stored
BUILDPACK_DIR=`cd $(dirname $0); cd ..; pwd`

source $BUILDPACK_DIR/bin/util

export_env_dir ${ENV_DIR}

: ${CORE_VERSION:="latest"}
: ${NODE_VERSION:="4.4.4"}
: ${CORE_VERSION:="latest"}
: ${CORE_CHANNEL:="preview"}

if [ -n "$BUILD_DEBUG" ]; then
	CORE_CONFIGURATION="Debug"
	CORE_ENVIRONMENT="--environment Development"
else
	CORE_CONFIGURATION="Release"
	CORE_ENVIRONMENT=""
fi

SRC_DIR=`mktemp -d`
# Move the app source code into temporary src dir using subshell to not leak shopt
(
	shopt -s dotglob
	mv ${BUILD_DIR}/* ${SRC_DIR}
)

mkdir -p ${CACHE_DIR}

# Install .NET Core
echo "Get .NET Core Version and Channel from the PROJECT"
DEPLOYMENT_FILE_LOCATION=${SRC_DIR}/.deployment
if [ -n "$(find ${SRC_DIR}/global.json)" ]; then
	echo "Get version from global.json"
	CORE_VERSION=$(ruby -rjson -e "j = JSON.parse(File.open('${SRC_DIR}/global.json','r:bom|utf-8').read); unless j['sdk'].nil? ; puts j['sdk']['version'];end")
	if [ -z "${CORE_VERSION}" ]; then
		CORE_VERSION="latest"
	elif [[ "${CORE_VERSION}" != "latest" ]]; then
		if [ ! "${CORE_VERSION}" > "1.0.0-preview1-002702" ]; then
			CORE_CHANNEL="beta"
		elif [ "${CORE_VERSION}" > "1.0.0-preview2-003121" ]; then
			#TODO
			CORE_DOWNLOAD_LOCATION="https://dotnetcli.blob.core.windows.net/dotnet/Sdk/rel-1.0.0/dotnet-dev-ubuntu-x64.latest.tar.gz"
		fi
	fi
fi

if [[ "${CORE_VERSION}" == "latest" && -e "${DEPLOYMENT_FILE_LOCATION}" ]]; then
	CORE_CHANNEL_TMP=$(awk -F "=" '/channel/ {print $2}' ${DEPLOYMENT_FILE_LOCATION} | tr -d ' ')
	if [ ! -z "${CORE_CHANNEL_TMP}" ]; then
		CORE_CHANNEL="${CORE_CHANNEL_TMP}"
	fi
fi

CORE_VERSION_FIRST="$CORE_VERSION"

if [[ "${CORE_VERSION}" == "latest" ]]; then
	CORE_VERSION_FIRST="Latest"
fi

# latest version may be http://dotnetcli.blob.core.windows.net/dotnet/dev/Binaries/1.0.1.001698/dotnet-ubuntu-x64.1.0.1.001698.tar.gz
: ${CORE_DOWNLOAD_LOCATION:="https://dotnetcli.blob.core.windows.net/dotnet/${CORE_CHANNEL}/Binaries/${CORE_VERSION_FIRST}/dotnet-dev-ubuntu-x64.${CORE_VERSION}.tar.gz"}

echo "Installing the dependencies"
apt_install libunwind8 gettext

mkdir -p ${BUILD_DIR}/dotnet

echo "Installing .NET CORE ${CORE_VERSION} from ${CORE_DOWNLOAD_LOCATION}"
curl ${CORE_DOWNLOAD_LOCATION} -Ls | tar xz -C ${BUILD_DIR}/dotnet
ln -s ${BUILD_DIR}/dotnet /app

export PATH="/app/dotnet:${PATH}"
echo "export: PATH+=/app/dotnet"
export LD_LIBRARY_PATH="${LD_LIBRARY_PATH}"
echo "export: LD_LIBRARY_PATH=${LD_LIBRARY_PATH}"

echo "Restoring the packages"
dotnet restore ${SRC_DIR}

mkdir -p ${BUILD_DIR}/.profile.d
cp -n ${BUILDPACK_DIR}/.profile.d/* ${BUILD_DIR}/.profile.d/
